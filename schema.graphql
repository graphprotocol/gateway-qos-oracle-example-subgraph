type GlobalState @entity {
  "Singleton entity with id 0"
  id: ID!

  messageCount: BigInt!

  dataPointCount: BigInt!

  indexerDataPointCount: BigInt!
}

type OracleMessage @entity {
  "Transaction hash the message was posted"
  id: ID!
  "JSON string payload of oracle message. Users can filter on topic field and use the IPFS hash to pull and parse QoS data."
  payload: String!
  "Epoch timestamp (in seconds) the message was posted to chain"
  createdAt: BigInt!
}

type MessageDataPoint @entity {
  id: ID!

  rawData: String!

  ipfsHash: String!

  indexerDataPointCount: BigInt!

  timestamp: BigInt!

  dataPoints: [DataPoint!]! @derivedFrom(field: "messageDataPoint")

  oracleMessage: OracleMessage!
}

interface DataPoint @entity {
  id: ID!

  messageDataPoint: MessageDataPoint!

  rawData: String!
}

type IndexerDataPoint implements DataPoint @entity {
  id: ID!

  messageDataPoint: MessageDataPoint!

  rawData: String!

  indexer: Indexer
}

type QueryDataPoint implements DataPoint @entity {
  id: ID!

  messageDataPoint: MessageDataPoint!

  rawData: String!

  subgraphDeployment: SubgraphDeployment
}

type Indexer @entity {
  "ETH address"
  id: ID!

  dataPoints: [IndexerDataPoint!]! @derivedFrom(field:"indexer")
}

type SubgraphDeployment @entity {
  "IPFS Hash of the deployment"
  id: ID!

  dataPoints: [QueryDataPoint!]! @derivedFrom(field:"subgraphDeployment")
}
